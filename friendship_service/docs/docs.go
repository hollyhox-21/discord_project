// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/friend/accept": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friendship_service"
                ],
                "summary": "Подтвердить запрос дружбы",
                "operationId": "AcceptFriendship",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AcceptFriendshipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResp"
                        }
                    }
                }
            }
        },
        "/v1/friend/decline": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friendship_service"
                ],
                "summary": "Отклонить запрос дружбы",
                "operationId": "DeclineFriendship",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DeclineFriendshipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResp"
                        }
                    }
                }
            }
        },
        "/v1/friend/list/{user_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friendship_service"
                ],
                "summary": "Получить список друзей",
                "operationId": "ListFriendship",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ListFriendshipResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResp"
                        }
                    }
                }
            }
        },
        "/v1/friend/request": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friendship_service"
                ],
                "summary": "Запрос на дружбу",
                "operationId": "RequestFriendship",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RequestFriendshipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResp"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friendship_service"
                ],
                "summary": "Удалить пользователя из друзей",
                "operationId": "DeleteFriendship",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DeleteFriendshipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AcceptFriendshipRequest": {
            "type": "object",
            "required": [
                "fromUserID",
                "toUserID"
            ],
            "properties": {
                "fromUserID": {
                    "type": "string"
                },
                "toUserID": {
                    "type": "string"
                }
            }
        },
        "api.DeclineFriendshipRequest": {
            "type": "object",
            "required": [
                "fromUserID",
                "toUserID"
            ],
            "properties": {
                "fromUserID": {
                    "type": "string"
                },
                "toUserID": {
                    "type": "string"
                }
            }
        },
        "api.DeleteFriendshipRequest": {
            "type": "object",
            "required": [
                "deleteUserID",
                "userID"
            ],
            "properties": {
                "deleteUserID": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "api.ListFriendshipResponse": {
            "type": "object",
            "properties": {
                "avatarPhotoUrl": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "api.RequestFriendshipRequest": {
            "type": "object",
            "required": [
                "fromUserID",
                "toUserID"
            ],
            "properties": {
                "fromUserID": {
                    "type": "string"
                },
                "toUserID": {
                    "type": "string"
                }
            }
        },
        "api.errorResp": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "FriendshipService",
	Description:      "Сервис управления взаимосвязями между пользователями",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
